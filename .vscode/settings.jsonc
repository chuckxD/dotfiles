{
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "launch": {
        "version": "0.2.0",
        "configurations": [
            {
                "type": "node",
                "name": "[0.1 node launch]",
                "request": "launch",
                "console": "integratedTerminal",
                "skipFiles": [
                    "<node_internals>/**"
                ],
                "args": [
                    "--inspect=127.0.0.1:9559"
                ]
            },
            {
                "type": "node",
                "request": "attach",
                "name": "[0.1 node attach]",
                "args": [
                    "--inspect-port=127.0.0.1:9559"
                ],
                "console": "integratedTerminal",
                "processId": "${command:PickProcess}",
                "skipFiles": [
                    "<node_internals>/**"
                ]
            },
            {
                "type": "node",
                "name": "[0.2 node launch]",
                "request": "launch",
                "console": "integratedTerminal",
                "args": [
                    "--inspect",
                    "--debug-port=9119"
                ],
                "skipFiles": [
                    "<node_internals>/**"
                ]
            },
            {
                "type": "node",
                "request": "attach",
                "name": "[0.2 node attach]",
                "args": [
                    "--inspect",
                    "--debug-port=9339"
                ],
                "console": "integratedTerminal",
                "processId": "${command:PickProcess}",
                "skipFiles": [
                    "<node_internals>/**"
                ]
            },
            {
                "type": "node",
                "request": "attach",
                "name": "[0.3 node] - attach node debug",
                "args": [
                    "--inspect",
                    "--debug-port=9339"
                ],
                "console": "integratedTerminal",
                "processId": "${command:PickProcess}",
                "skipFiles": [
                    "<node_internals>/**"
                ]
            },
            {
                "address": "TCP/IP address of process to be debugged",
                "localRoot": "${workspaceFolder}",
                "name": "[0.4 node] - Attach to Remote",
                "remoteRoot": "Absolute path to the remote directory containing the program",
                "request": "attach",
                "skipFiles": [
                    "<node_internals>/**"
                ],
                "type": "pwa-node",
                "args": [
                    "--debug-port=9449"
                ]
            }
        ]
    },
    //
    // less aggressive intellisene start
    // https://ourcodeworld.com/articles/read/505/how-to-disable-autocompletion-and-intellisense-in-microsoft-visual-studio-code
    //
    // Controls if lines should wrap. The lines will wrap at min(editor.wrappingColumn, viewportWidthInColumns).
    "editor.wordWrap": "off",
    // Controls the indentation of wrapped lines. Can be one of 'none', 'same' or 'indent'.
    "editor.wrappingIndent": "none",
    // Controls if quick suggestions should show up or not while typing
    "editor.quickSuggestions": true,
    // Controls the delay in ms after which quick suggestions will show up
    "editor.quickSuggestionsDelay": 90,
    // Enables parameter hints
    "editor.parameterHints": true,
    // Controls if the editor should automatically close brackets after opening them
    "editor.autoClosingBrackets": false,
    // Controls if the editor should automatically format the line after typing
    "editor.formatOnType": false,
    // Controls if suggestions should automatically show up when typing trigger characters
    "editor.suggestOnTriggerCharacters": false,
    // Controls if suggestions should be accepted 'Enter' - in addition to 'Tab'. Helps to avoid ambiguity between inserting new lines or accepting suggestions.
    "editor.acceptSuggestionOnEnter": "off",
    // Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (;) can be a commit character that accepts a suggestion and types that character.
    "editor.acceptSuggestionOnCommitCharacter": false,
    //
    // less aggressive intellisense off
    //
    // normal editor stuff
    "editor.useTabStops": true,
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.detectIndentation": true,
    "editor.formatOnSave": false,
    "editor.formatOnPaste": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    // "editor.defaultFormatter": "dbaeumer.vscode-eslint",
    // "editor.defaultFormatter": "vscode.typescript-language-features",
    "[javascript]": {
        // "editor.defaultFormatter": "dbaeumer.vscode-eslint"
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[json,jsonc]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    // "editor.defaultFormatter": "esbenp.prettier-vscode"
    //
    // etc
    "workbench.activityBar.visible": true,
    "window.zoomLevel": -1,
    // vim stuff
    "vim.enableNeovim": true,
    "vim.neovimPath": "/usr/local/bin/nvim",
    "vim.easymotion": true,
    "vim.sneak": true,
    "vim.incsearch": true,
    "vim.useSystemClipboard": true,
    // end vim stuff
    // start html stuff
    "html.autoClosingTags": false,
    "html.format.enable": false,
    "html.validate.scripts": false,
    "html.suggest.html5": false,
    "html.format.extraLiners": "",
    "codestream.email": "chuck.schleutker@gmail.com",
    "vs-kubernetes": {
        "vs-kubernetes.draft-path.mac": "/Users/jcs/.vs-kubernetes/tools/draft/darwin-amd64/draft",
        "vs-kubernetes.helm-path.mac": "/Users/jcs/.vs-kubernetes/tools/helm/darwin-amd64/helm"
    },
    "atomKeymap.promptV3Features": true,
    "editor.multiCursorModifier": "ctrlCmd"
}
// "vim.useCtrlKeys": true,
// "vim.hlsearch": true,
// "vim.insertModeKeyBindings": [
//   {
//     "before": ["j", "j"],
//     "after": ["<Esc>"]
//   }
// ],
// "vim.normalModeKeyBindingsNonRecursive": [
//   {
//     "before": ["<leader>", "d"],
//     "after": ["d", "d"]
//   },
//   {
//     "before": ["<C-n>"],
//     "commands": [":nohl"]
//   }
// ],
// "vim.leader": "<space>",
// "vim.handleKeys": {
//   "<C-a>": false,
//   "<C-f>": false
// }
